<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何通过Hexo+GitHub搭建自己的博客</title>
      <link href="/posts/a0466c35.html"/>
      <url>/posts/a0466c35.html</url>
      
        <content type="html"><![CDATA[<h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><h2 id="node安装"><a href="#node安装" class="headerlink" title="node安装"></a>node安装</h2><p>node.js是JavaScript的运行环境</p><p>打开node官网<a href="https://nodejs.org/en/download/">Node.js — Download Node.js®</a></p><p>选择对应的版本进行安装</p><p><img src="https://i.postimg.cc/13Dys8Cm/photo001.png"></p><p>安装好node后进入终端</p><p>输入以下命令来检验是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/BbyJQHf6/photo002.png"></p><h2 id="cnpm安装"><a href="#cnpm安装" class="headerlink" title="cnpm安装"></a>cnpm安装</h2><p>cnpm是淘宝团队维护的npm镜像团队，相比npm下载速度更快，方便接下来的Hexo下载</p><p>通过输入一下命令来实现cnpm安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure><p>安装成功返回结果如下</p><p><img src="https://i.postimg.cc/2jXkwRLD/photo003.png"></p><p>安装完cnpm后需要通过<code>cnpm -v</code>来验证是否安装成功</p><p><img src="https://i.postimg.cc/MKMW3P1j/photo004.png"></p><p><strong>注：若这一步出现了没有cnpm命令，可能需要在系统中添加环境变量</strong></p><p>通过右键”此电脑“点击属性-&gt;点击“高级系统设置”</p><p><img src="https://i.postimg.cc/GhWbWFjg/photo005.png"></p><p>选择环境变量</p><p><img src="https://i.postimg.cc/MGxqTzNy/photo006.png"></p><p>在用户的path中添加上node_global路径，位于安装node的路径下</p><p><img src="https://i.postimg.cc/mrwR10WK/photo007.png"></p><p>接着在系统的path中添加上node_global和node_cache路径</p><p><img src="https://i.postimg.cc/4dxG6BJy/photo008.png"></p><p>再通过<code>cnpm -v</code>来验证是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>Hexo是基于node.js的开源静态博客框架</p><p>安装Hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完成后通过<code>hexo -v</code>进行校验</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/d37KX3ZK/photo009.png"></p><h1 id="进行Hexo配置"><a href="#进行Hexo配置" class="headerlink" title="进行Hexo配置"></a>进行Hexo配置</h1><h2 id="初始化博客文件夹"><a href="#初始化博客文件夹" class="headerlink" title="初始化博客文件夹"></a>初始化博客文件夹</h2><p>创建一个博客文件夹，通过终端进入到博客文件夹中</p><p>通过命令<code>hexo init</code>来初始化博客文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/mDps8CDw/photo010.png"></p><p>运行完后，文件夹会生成一系列文件</p><p><img src="https://i.postimg.cc/Y0Jww7QL/photo011.png"></p><h2 id="生成静态页面文件"><a href="#生成静态页面文件" class="headerlink" title="生成静态页面文件"></a>生成静态页面文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/9XS29dsX/photo012.png"></p><h2 id="启动本地博客服务"><a href="#启动本地博客服务" class="headerlink" title="启动本地博客服务"></a>启动本地博客服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/8P6SmFVR/photo013.png"></p><p>通过进入这个本地链接，即可看到hexo预设的博客了</p><p><img src="https://i.postimg.cc/vZ7wCpTD/photo014.png"></p><h1 id="下载GIT"><a href="#下载GIT" class="headerlink" title="下载GIT"></a>下载GIT</h1><p>打开Git官网下载<a href="https://git-scm.com/downloads">Git - Downloads</a></p><p>官方的下载源比较慢，可以选择国内的镜像源<a href="https://www.newbe.pro/Mirrors/Mirrors-Git-For-Windows/">Git for Windows | newbe</a></p><h2 id="安装GIT"><a href="#安装GIT" class="headerlink" title="安装GIT"></a>安装GIT</h2><p>在安装中，需要注意的改的地方有:</p><p>选择vscode作为默认编辑器</p><p><img src="https://i.postimg.cc/sgCR6VVt/photo015.png"></p><p>安装完后以管理员身份运行Git Bash</p><p><img src="https://i.postimg.cc/g0YbpNLs/photo016.png"></p><h2 id="更改GIT信息"><a href="#更改GIT信息" class="headerlink" title="更改GIT信息"></a>更改GIT信息</h2><p>输入一下命令：</p><p>修改用户名：冒号内填写Github注册账号的用户名</p><p>修改用户邮箱：冒号内填写Github注册账号的邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;username&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;useremail&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/9fJ5QZGh/photo017.png"></p><h1 id="创建Github仓库和上传"><a href="#创建Github仓库和上传" class="headerlink" title="创建Github仓库和上传"></a>创建Github仓库和上传</h1><h2 id="在blog文件夹中安装git插件"><a href="#在blog文件夹中安装git插件" class="headerlink" title="在blog文件夹中安装git插件"></a>在blog文件夹中安装git插件</h2><p>通过在blog目录下输入命令，在blog目录下安装git部署插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><h2 id="Github创建文件仓库"><a href="#Github创建文件仓库" class="headerlink" title="Github创建文件仓库"></a>Github创建文件仓库</h2><p>在新建仓库中创建一个仓库</p><p><img src="https://i.postimg.cc/jCVBFXrz/photo018.png"></p><p><strong>注意仓库名字要为[Username.github.io]，仅有这样GitHub才会开放page功能</strong></p><h2 id="配置Hexo的Github仓库信息"><a href="#配置Hexo的Github仓库信息" class="headerlink" title="配置Hexo的Github仓库信息"></a>配置Hexo的Github仓库信息</h2><p>修改文件最下面的Deployment参数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/GITxiaoyuHUB/GITxiaoyuHUB.github.io.git</span> <span class="comment">#仓库git地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> <span class="comment">#分支</span></span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/y6wdKC1T/photo019.png"></p><h2 id="将静态网页部署到Github仓库"><a href="#将静态网页部署到Github仓库" class="headerlink" title="将静态网页部署到Github仓库"></a>将静态网页部署到Github仓库</h2><p>运行<code>hexo d</code>将静态页面部署到Github仓库中</p><p>其中需要登录Github</p><p>完成后刷新仓库即可看到上传的文件</p><p><img src="https://i.postimg.cc/Qx1MxYVZ/photo020.png"></p><p>此时打开网站[username].github.io，我这里为GITxiaoyuHUB.github.io</p><p><img src="https://i.postimg.cc/FKsFp9ph/photo021.png"></p><p>即可看到我们一开始本地链接的博客了</p><h1 id="博客页面美化"><a href="#博客页面美化" class="headerlink" title="博客页面美化"></a>博客页面美化</h1><p>这里推荐一个博客页面主题的下载网站<a href="https://hexo.io/themes/">Themes | Hexo</a></p><p><img src="https://i.postimg.cc/SsHymchK/photo022.png"></p><p>这里我假设我需要下载的主题是MeiliDu</p><p>点开后会自动跳转到MeiliDu的Github仓库中</p><p><img src="https://i.postimg.cc/YCxqQ41X/photo023.png"></p><p>根据提示复制仓库的git地址</p><p><img src="https://i.postimg.cc/qvrvtcCh/photo024.png"></p><p>通过终端打开博客所在的文件夹，并粘贴命令克隆主题的GitHub仓库</p><p><img src="https://i.postimg.cc/RFWSrX28/photo025.png"></p><p>下载完后博客文件夹的&#x2F;theme下就出现了一个新的文件夹meilidu</p><p>接下来我们打开博客文件夹下的_config.yml文件将theme修改为meilidu</p><p><img src="https://i.postimg.cc/hGyD3HZT/photo026.png"></p><p>保存后通过中断输入一下命令，将静态页面部署在本地链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开本地链接后，主题已经更变</p><p>通过<code>hexo d</code>部署在GitHub上</p><p>打开我们目标的GitHub网页，此时已经成功部署</p><h1 id="将博客放到自己的个人云服务器"><a href="#将博客放到自己的个人云服务器" class="headerlink" title="将博客放到自己的个人云服务器"></a>将博客放到自己的个人云服务器</h1><h2 id="安装环境需要的基础文件"><a href="#安装环境需要的基础文件" class="headerlink" title="安装环境需要的基础文件"></a>安装环境需要的基础文件</h2><p>在服务器终端输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel</span><br></pre></td></tr></table></figure><p>安装git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y git</span><br></pre></td></tr></table></figure><p>安装nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure><p>安装完后启动nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx.service</span><br></pre></td></tr></table></figure><p>新建博客目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /home/hexo</span><br></pre></td></tr></table></figure><p>改变nginx基本配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>修改服务器名字，改为公网服务器的公网IP</p><p>root地址改为博客文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server_name  服务器公网IP</span><br><span class="line">root         /home/hexo</span><br></pre></td></tr></table></figure><p>重新启动nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx.service</span><br></pre></td></tr></table></figure><h2 id="创建Git仓库"><a href="#创建Git仓库" class="headerlink" title="创建Git仓库"></a>创建Git仓库</h2><p>在创建仓库前创建一个用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">useradd username //创建用户名</span><br><span class="line">passwd username  //修改用户密码</span><br><span class="line">//接下来输入密码</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> 740 /etc/sudoers  //更改文件权限</span><br><span class="line">vim /etc/sudoers//编辑文件</span><br></pre></td></tr></table></figure><p>在加入自己更改的用户名在root下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rootALL=(ALL)ALL</span><br><span class="line">usernameALL=(ALL)ALL</span><br></pre></td></tr></table></figure><p>保存退出后，修改文件权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 /etc/sudoers //将文件修改为只读模式</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /home/username //进入刚刚创建的用户名文件夹</span><br></pre></td></tr></table></figure><p>新建一个git仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git init --bare blog.git //初始化git仓库</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> username:username -R blog.git//赋予生成的用户权限</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> blog.git/hooks/ //进入git仓库的hooks文件夹</span><br><span class="line"></span><br><span class="line">vim post-receive //新建一个post-receive文件</span><br></pre></td></tr></table></figure><p>在文件中添加一下信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --work-tree=/home/hexo  --git-dir=/home/xiaoyu/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>其中–work-tree是网站的目录，–git-dir是仓库的目录</p><p>保存返回终端后，赋予执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x post-receive</span><br></pre></td></tr></table></figure><h2 id="Windows系统与服务器ssh连接"><a href="#Windows系统与服务器ssh连接" class="headerlink" title="Windows系统与服务器ssh连接"></a>Windows系统与服务器ssh连接</h2><h3 id="windows系统端"><a href="#windows系统端" class="headerlink" title="windows系统端"></a>windows系统端</h3><p>在终端中生成密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>一路回车即可</p><p>生成后按照终端上的路径找到生成密钥文件的位置</p><p>通过文本打开<code>id_rsa</code>文件，将文本内容全选复制</p><h3 id="云服务器端"><a href="#云服务器端" class="headerlink" title="云服务器端"></a>云服务器端</h3><p>将密钥保存到云服务器端</p><p>使用我们新建的用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su username </span><br></pre></td></tr></table></figure><p>新建ssh文件夹并保存密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//新建ssh文件夹</span><br><span class="line"><span class="built_in">mkdir</span> ~/.ssh/</span><br><span class="line">//保存密钥</span><br><span class="line">vim ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><h3 id="Windows系统端使用ssh连接云服务器"><a href="#Windows系统端使用ssh连接云服务器" class="headerlink" title="Windows系统端使用ssh连接云服务器"></a>Windows系统端使用ssh连接云服务器</h3><p>返回windows打开终端</p><p>进行ssh连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v username@ipxxxx</span><br></pre></td></tr></table></figure><p>其中username为云服务器端新创建的用户名，ipxxxx为云服务器的公网ip，通过终端连接上云服务器</p><h3 id="修改我们的hexo配置文件"><a href="#修改我们的hexo配置文件" class="headerlink" title="修改我们的hexo配置文件"></a>修改我们的hexo配置文件</h3><p>打开windows端存取博客的文件夹的<code>_config.yml</code></p><p>将repo修改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username@ipxxxx:/home/username/blog.git</span><br></pre></td></tr></table></figure><p>现在就完成了将博客推送至云服务器端</p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"XiaoYu`Blog","short_name":"xiaoyu","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/专栏.png","sizes":"16x16","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;}div#menus {    font-family: "ZhuZiAYuanJWD";}h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;}a.article-title,a.blog-slider__title,a.categoryBar-list-link,h1.post-title {    font-family: ZhuZiAYuanJWD;}.iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;}/* 时间轴生肖icon */svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;}.icon-zhongbiao::before {    color: #f7c768;}/* bilibli番剧插件 *//* #article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;} */a.bangumi-tab:hover {    text-decoration: none !important;}.bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;}a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;}.bangumi-button {    padding: 5px 10px !important;}a.bangumi-tab {    padding: 5px 10px !important;}svg.icon.faa-tada {    font-size: 1.1em;}.bangumi-info-item {    border-right: 1px solid #f2b94b;}.bangumi-info-item span {    color: #f2b94b;}.bangumi-info-item em {    color: #f2b94b;}/* 解决artitalk的图标问题 */#uploadSource>svg {    width: 1.19em;    height: 1.5em;}/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */#page-header:not(.not-top-img):before {    background-color: transparent !important;}/* 首页文章卡片 */#recent-posts>.recent-post-item {    background: rgba(255, 255, 255, 0.9);}/* 首页侧栏卡片 */#aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);}/* 文章页面正文背景 */div#post {    background: rgba(255, 255, 255, 0.9);}/* 分页页面 */div#page {    background: rgba(255, 255, 255, 0.9);}/* 归档页面 */div#archive {    background: rgba(255, 255, 255, 0.9);}/* 标签页面 */div#tag {    background: rgba(255, 255, 255, 0.9);}/* 分类页面 */div#category {    background: rgba(255, 255, 255, 0.9);}/*夜间模式伪类遮罩层透明*/[data-theme="dark"] #recent-posts>.recent-post-item {    background: #121212;}[data-theme="dark"] .card-widget {    background: #121212 !important;}[data-theme="dark"] div#post {    background: #121212 !important;}[data-theme="dark"] div#tag {    background: #121212 !important;}[data-theme="dark"] div#archive {    background: #121212 !important;}[data-theme="dark"] div#page {    background: #121212 !important;}[data-theme="dark"] div#category {    background: #121212 !important;}[data-theme="dark"] div#category {    background: transparent !important;}/* 页脚透明 */#footer {    background: transparent !important;}/* 头图透明 */#page-header {    background: transparent !important;}#rightside>div>button {    border-radius: 5px;}/* 滚动条 */::-webkit-scrollbar {    width: 10px;    height: 10px;}::-webkit-scrollbar-thumb {    background-color: #3b70fc;    border-radius: 2em;}::-webkit-scrollbar-corner {    background-color: transparent;}::-moz-selection {    color: #fff;    background-color: #3b70fc;}/* 音乐播放器 *//* .aplayer .aplayer-lrc {  display: none !important;} */.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */}.aplayer.aplayer-fixed {    z-index: 999999 !important;}/* 评论框  */.vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;}/* 设置评论框 */.vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;}/* md网站下划线 */#article-container a:hover {    text-decoration: none !important;}#article-container #hpp_talk p img {    display: inline;}/* 404页面 */#error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);}#error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;}#error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;}#error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;}#error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;}#error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;}#error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);}#body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;}#body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;}#body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;}#body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;}#body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--anzhiyu-card-bg);    display: flex;}#body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;}#body-wrap.error .aside-list .aside-list-item .content time {    display: none;}/* 代码框主题 */#article-container figure.highlight {    border-radius: 10px;}]]></content>
      
    </entry>
    
    
  
</search>
